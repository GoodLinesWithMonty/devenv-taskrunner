#!/usr/bin/env bash

set -o errexit
set -o pipefail

NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'
RED_BOLD="\033[1;31m"
GREEN_BOLD="\033[1;32m"
YELLOW_BOLD="\033[1;33m"
BLUE_BOLD="\033[1;34m"
MAGENTA_BOLD="\033[1;35m"
CYAN_BOLD="\033[1;36m"

check_if_devenv() {
  # Check if git is installed
  if ! command -v git > /dev/null 2>&1; then
      echo -e "${RED_BOLD}Git ${RED}is necessary to run devenv task runner!${NOCOLOR}"
      exit 1
  fi
  if [[ $(git rev-parse --show-toplevel 2>/dev/null) ]]; then
    # Check if .build directory is available in project
    if [[ ! -d $(git rev-parse --show-toplevel)/.build ]]; then
      echo -e "⚠️ ${RED_BOLD}$(pwd)/.build/ ${RED}is missing!${NOCOLOR}"
      exit 1
    fi

    # Check if devenv-functions.sh file is available in project
    if [[ ! -e $(git rev-parse --show-toplevel)/.build/devenv-functions.sh ]]; then
      echo -e "⚠️ ${RED_BOLD}$(pwd)/.build/devenv-functions.sh ${RED}is missing!${NOCOLOR}"
      exit 1
    fi

  else
    echo -e "⚠️ ${RED}You must init a git repository before you can use devenv task runner!${NOCOLOR}"
    exit 1
  fi
}

execute_devenv_command() {
. $(git rev-parse --show-toplevel)/.build/devenv-functions.sh && "$@"
}

check_if_devenv
# Pass all arguments to devenv project script
execute_devenv_command "$@"